% the bit-reversal portion of a 256-point Fast Fourier Transform

t  IS $255
n  IS 256
pi GREG
pj GREG
tx GREG
i  GREG
j  GREG

      LOC  Data_Segment
Data GREG @
% Here follows 256 octabyte pairs for (real,imag) parts of complex data
% I'm faking it with small integer numbers just for easy testing
% But it uses long lines, so assemble with "mmixal -b 80"
     OCTA 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
     OCTA 16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
     OCTA 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47
     OCTA 48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
     OCTA 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79
     OCTA 80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95
     OCTA 96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111
     OCTA 112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127
     OCTA 128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143
     OCTA 144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159
     OCTA 160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175
     OCTA 176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191
     OCTA 192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207
     OCTA 208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223
     OCTA 224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239
     OCTA 240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
     OCTA 256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271
     OCTA 272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287
     OCTA 288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303
     OCTA 304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319
     OCTA 320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335
     OCTA 336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351
     OCTA 352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367
     OCTA 368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383
     OCTA 384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399
     OCTA 400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415
     OCTA 416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431
     OCTA 432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447
     OCTA 448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463
     OCTA 464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479
     OCTA 480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495
     OCTA 496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511

      LOC  #100
Main  SET  i,n-1
0H    GREG #0102040810204080
1H    MOR  j,0B,i
      CMP  t,i,j
      PBNN t,2F           jump if i<=j
      16ADDU pi,i,Data    pi=&Data[i] 
      16ADDU pj,j,Data    pj=&Data[j]
      LDO  t,pi,0
      LDO  tx,pj,0
      STO  t,pj,0         swap Data[i].real with Data[j].real
      STO  tx,pi,0
      LDO  t,pi,8
      LDO  tx,pj,8
      STO  t,pj,8         swap Data[i].imag with Data[j].imag
      STO  tx,pi,8
2H    SUB  i,i,1          i--
      PBP  i,1B           repeat until i==0
      TRAP 0,Halt,0
